Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.

You must not use any built-in exponent function or operator.

For example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.
 

Example 1:

Input: x = 4
Output: 2
Explanation: The square root of 4 is 2, so we return 2.
Example 2:

Input: x = 8
Output: 2
Explanation: The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.
 

Constraints:

0 <= x <= 231 - 1
Accepted
1.3M
Submissions
3.4M
Acceptance Rate
37.1%

class Solution {
public:
    int mySqrt(int x) {
     long long  int res;
        
        int s = 0, e = x;
        
        while(s<=e){
      long long  int  mid = s + (e-s)/2;
            
            if(mid*mid == x){
                return mid;
            }else if(mid*mid>x){
                e = mid-1;
            }else{
                res = mid;
                s = mid + 1;
            }
        }
        return res;
    }
};