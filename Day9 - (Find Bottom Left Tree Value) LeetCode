513. Find Bottom Left Tree Value

https://leetcode.com/problems/find-bottom-left-tree-value/description/

Given the root of a binary tree, return the leftmost value in the last row of the tree.

 

Example 1:
Input: root = [2,1,3]
Output: 1

Example 2:
Input: root = [1,2,3,4,null,5,6,null,null,7]
Output: 7
 

Constraints:

The number of nodes in the tree is in the range [1, 104].
-231 <= Node.val <= 231 - 1

class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        if(root == NULL) return 0;
        vector<vector<int>>ans;
        queue<TreeNode *>q;
        q.push(root);
        while(!q.empty()){
        vector<int>v;
            int size = q.size();
            for(int i=0; i<size; i++){
                TreeNode *temp = q.front();
                q.pop();
                v.push_back(temp->val);
                
                if(temp->left) q.push(temp->left);
                if(temp->right) q.push(temp->right);
            }
            ans.push_back(v);
        }

        return ans[ans.size()-1][0];
    }
};